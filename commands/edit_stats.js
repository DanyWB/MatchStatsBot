const db = require('../db/connect');

module.exports = async function editStatsCommand(bot) {
  bot.command('edit_stats', async (ctx) => {
    try {
      if (ctx.session?.role !== 'admin') {
        return ctx.reply('‚ùå –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ.');
      }

      const matches = await db('matches')
        .join('teams as t1', 'matches.team1_id', 't1.id')
        .join('teams as t2', 'matches.team2_id', 't2.id')
        .select('matches.id', 'matches.date', 't1.name as team1', 't2.name as team2');

      if (!matches.length) {
        return ctx.reply('‚ö†Ô∏è –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –º–∞—Ç—á–µ–π.');
      }

      const buttons = matches.map(m => [{
        text: `${m.team1} vs ${m.team2} (${m.date.toISOString().split('T')[0]})`,
        callback_data: `editstat:match:${m.id}`,
      }]);

      ctx.session.scenario = 'edit_stats';
      ctx.session.temp = {};
      await ctx.reply('üìä –í—ã–±–µ—Ä–∏—Ç–µ –º–∞—Ç—á –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:', {
        reply_markup: { inline_keyboard: buttons },
      });

    } catch (err) {
      console.error('edit_stats error:', err);
      ctx.session = null;
      return ctx.reply('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –∫–æ–º–∞–Ω–¥—ã.');
    }
  });
};
